version: '3.4'

services:

  cargo_ui:
    container_name: cargo_ui
    build:
      context: ./services/cargo_ui
      dockerfile: Dockerfile-prod
      args:
        - NODE_ENV=production
        - REACT_APP_USERS_SERVICE_URL=${REACT_APP_USERS_SERVICE_URL}
    expose:
      - 80
    depends_on:
      - cargo_server
    links:
      - cargo_server
  
  cargo_server:
    container_name: cargo_server
    build:
      context: ./services/cargo_server
      dockerfile: Dockerfile-prod
    volumes:
      - ./services/cargo_server:/usr/src/app
    expose:
      - 5000
    environment: 
      - APP_SETTINGS=project.config.ProductionConfig

  nginx:
    container_name: nginx
    build:
      context: ./services/nginx
      dockerfile: Dockerfile-prod
    restart: always
    ports:
      - 80:80
    depends_on:
      - cargo_server
      - cargo_ui
      - cargo_mongo_db

  # swagger:
  #   container_name: cargo-swagger
  #   build:
  #     context: ./services/swagger
  #     dockerfile: Dockerfile-prod
  #   expose:
  #     - 8080
  #   environment:
  #     - URL=swagger.json
  #   depends_on:
  #     - cargo_server

  cargo_mongo_db:
    image: "mongo:latest"
    container_name: cargo_mongo_db
    ports:
     - "27017:27017"
  
  # cadvisor:
  #   image: google/cadvisor:v0.28.3
  #   container_name: cadvisor
  #   volumes:
  #     - /:/rootfs:ro
  #     - /var/run:/var/run:rw
  #     - /sys:/sys:ro
  #     - /var/lib/docker/:/var/lib/docker:ro
  #     - /cgroup:/cgroup:ro
  #   restart: unless-stopped
  #   ports:
  #     - 8080:8080
  #   network_mode: host
  #   labels:
  #     org.label-schema.group: "monitoring"